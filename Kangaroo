import greenfoot.*;  // (World, Actor, GreenfootImage, and Greenfoot)

/**
 * Alejandro Perez
 * Period 5
 */
public class Kangaroo extends SmoothMover
{
    private static final int gunReloadTime = 5;         // The minimum delay between firing the gun.
    private static final int protonReloadTime = 500; // the minimum delay between firing proton waves

    private int reloadDelayCount;               // How long ago we fired the gun the last time.
    private int protonReloadDelayCount;  // How long ago we fired the proton wave the last time.
    
    private GreenfootImage kangaroo = new GreenfootImage("kangaroo.png");    

    /**
     * Initilise this kangaroo.
     */
    public Kangaroo()
    {
        reloadDelayCount = 5;
        protonReloadDelayCount = 500;
        Vector drift = new Vector(0,0.3);
        addForce(drift);
    }

    /**
     * Do what a kangaroo's gotta do. (Which is: mostly flying about, and turning,
     * accelerating and shooting when the right keys are pressed.)
     */
    public void act()
    {
        checkKeys();
        reloadDelayCount++;
        protonReloadDelayCount++;
        move();
        checkCollision();
    }
    
    /**
     * Check whether there are any key pressed and react to them.
     */
    private void checkKeys() 
    {
        if (Greenfoot.isKeyDown("space")) 
        {
            fire();
        }
        if (Greenfoot.isKeyDown("left"))
        {
            setRotation( getRotation() - 5 );
        }
        if (Greenfoot.isKeyDown("right"))
        {
            setRotation( getRotation() + 5 );
        }
        
        ignite(Greenfoot.isKeyDown("up"));
        
    }
    
    /**
     * Fire a laser if the gun is ready.
     */
    private void fire() 
    {
        if (reloadDelayCount >= gunReloadTime) 
        {
            Laser laser = new Laser (getMovement().copy(), getRotation());
            getWorld().addObject (laser, getX(), getY());
            laser.move ();
            reloadDelayCount = 0;
        }
    }
    
    /**
     * moves the kangaroo forward and changes its image when called.
     */
    private void ignite( boolean boosterOn )
    {
        if (boosterOn)
        {
            setImage(kangaroo);
            Vector drift = new Vector(getRotation(), 0.3);
            addForce(drift);
        }
        if (!boosterOn)
        {
            setImage(kangaroo);
        }
    } // end  private void ignite( boolean boosterOn )
    
    /**
     * Check to see if the kangaroo has collided with an apple.
     */
    private void checkCollision()
    {
        Actor apple = getOneIntersectingObject(Apple.class);
        if (apple != null)
        {
            getWorld().addObject( new Explosion(), getX(), getY() );
            Field field = (Field) getWorld();
            field.gameOver();
            getWorld().removeObject(this);
        } // end  if (apple != null)
    } // end  private void checkCollision()
    
}
